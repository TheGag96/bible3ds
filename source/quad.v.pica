; PICA200 vertex shader for citro2d

; Uniforms
.fvec mdlvMtx[4], projMtx[4]

; Constants
.constf common_const(0.0, 1.0, 0.5, 0.003921568393707275390625)
.alias  zeros  common_const.xxxx ; Vector full of 0.0
.alias  ones   common_const.yyyy ; Vector full of 1.0
.alias  halves common_const.zzzz ; Vector full of 0.5
.alias  clrdiv common_const.wwww ; Vector full of 1/255 (float24 approximation)
.constf common_const2(-1.0, 2.0, 3.0, 4.0)
.alias  neg_ones common_const2.xxxx ; Vector full of -1.0
.alias  twos     common_const2.yyyy ; Vector full of 2.0

.constf BLOCK_SIZE(16.0, 16.0, 1.0, 1.0)

; Outputs
.out oPosition  position
.out oTexCoord0 texcoord0
.out oTexCoord1 texcoord1
.out oColor     color

; Inputs
.in iPosition      v0
.in iTexCoord      v1
.in iProcTexCoord  v2
.in iColor         v3

; Main procedure
.entry quad_main
.proc quad_main
  ; r0 = vec4(iPosition, 1.0)

  ; x = round(x*BLOCK_SIZE + scroll.x);
  ; y = round(y*BLOCK_SIZE + scroll.y);
  ; z = z
  ; w = 1
  ; mov r0.xyz, iPosition
  ; mov r1, BLOCK_SIZE
  ; mul r0, r0, r1
  ; mov r1, scroll
  ; add r0, r0, r1
  ; mov r1, common_const.zzxx  ; (0.5, 0.5, 0, 0)

  ; ; round() is annoying...
  ; mov r3, common_const2
  ; slt r2, r0, r1.z  ; pos < 0
  ; mul r2, r2, r3.y  ; * 2
  ; add r2, r2, r3.x  ; - 1
  ; mul r1, r1, r2
  ; add r0, r0, r1    ; add 0.5 or -0.5 before flooring
  ; flr r0.xy, r0

  ; mov r0.w,   ones

  ; mov oPosition, r0

  ; r0 = vec4(iPosition, 1.0)
  mov r0.xyz, iPosition
  mov r0.w,   ones
  mov oPosition, r0

  ; oTexCoord0 = iTexCoord
  mov oTexCoord0, iTexCoord

  ; oTexCoord1 = iBlend
  mov oTexCoord1, iProcTexCoord

  ; oColor = iColor / 255
  mul oColor, clrdiv, iColor

  end
.end
